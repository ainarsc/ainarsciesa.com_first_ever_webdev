/** It looks at #bg-img class in the
body because I included backgound mixin in the body styling
The following could be set up in the body or other way, but this is
showing SASS convention**/
.menu-btn {
  position: absolute;
  z-index: 3;
  right: 35px;
  top: 35px;
  cursor: pointer;
  transition: all 0.5s ease-out; }
  .menu-btn .btn-line {
    width: 28px;
    height: 3px;
    margin: 0 0 5px 0;
    background: white;
    transition: all 0.5s ease-out; }
  .menu-btn.close {
    transform: rotate(180deg); }
    .menu-btn.close .btn-line:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px); }
    .menu-btn.close .btn-line:nth-child(2) {
      opacity: 0; }
    .menu-btn.close .btn-line:nth-child(3) {
      transform: rotate(-45deg) translate(7px, -6px); }

.menu {
  position: fixed;
  top: 0;
  width: 100%;
  opacity: 0.9;
  visibility: hidden; }
  .menu.show {
    visibility: visible; }
  .menu-nav, .menu-branding {
    display: flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    float: right;
    width: 50%;
    height: 100vh;
    overflow: hidden; }
  .menu-nav {
    margin: 0;
    padding: 0;
    background: #373737;
    list-style: none;
    transform: translate3d(0, -100%, 0);
    transition: all 0.5s ease-out; }
    .menu-nav.show {
      transform: translate3d(0, 0, 0); }
  .menu-branding {
    background: #444;
    transform: translate3d(0, 100%, 0);
    transition: all 0.5s ease-out; }
    .menu-branding.show {
      transform: translate3d(0, 0, 0); }
  .menu .nav-items {
    transform: translate3d(600px, 0, 0);
    transition: all 0.5s ease-out; }
    .menu .nav-items.show {
      transform: translate3d(0, 0, 0); }
  .menu .nav-link {
    display: inline-block;
    position: relative;
    font-size: 20px;
    font-weight: 300;
    text-transform: uppercase;
    padding: 0.8rem;
    color: white;
    text-decoration: none;
    transition: all 0.5s ease-out; }
    .menu .nav-link.current {
      color: #ffcc66; }
    .menu .nav-link:hover {
      color: #ffcc66; }

/**or loop same as in java (i = 0; x<y; i++),
Each x is being multiplied to make each line
come in seperatly **/
.nav-items:nth-child(1) {
  transition-delay: 0.1s; }

.nav-items:nth-child(2) {
  transition-delay: 0.2s; }

.nav-items:nth-child(3) {
  transition-delay: 0.3s; }

.nav-items:nth-child(4) {
  transition-delay: 0.4s; }

* {
  box-sizing: border-box; }

/** Look into refactoring the code, a lot of the & are not necessary
and ID and classes in some cases here are not necessary, remove them from
HTML markup and just style the HTML element instead **/
body {
  /** checks the variable thats set to true/false at the global scope **/
  background: #444;
  color: white;
  height: 100%;
  margin: 0;
  line-height: 1.2;
  font-family: 'Helvetica', Tahoma, Geneva, sans-serif; }
  body#bg-img {
    background: url(/../dist/img_files/DSC01071.jpg);
    background-attachment: fixed;
    background-size: cover;
    /** Better syntax **/ }
    body#bg-img:after {
      /** after effect, has to include content **/
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      background: rgba(68, 68, 68, 0.5); }

/* Headings */
h1, h2, h3 {
  margin: 0;
  font-weight: 100;
  /** the & references the class or ID **/ }
  h1.lg-heading, h2.lg-heading, h3.lg-heading {
    font-size: 5rem;
    /** SCSS syntax **/ }
  h1.sm-heading, h2.sm-heading, h3.sm-heading {
    margin-bottom: 1rem;
    padding: 0.2rem 1rem;
    background: rgba(73, 73, 73, 0.5); }

.text-secondary {
  color: #ffcc66; }

/* Links (inlcuding icons as they are wrapped in a element)*/
a {
  color: white;
  text-decoration: none; }

header {
  /* fixes the little menu button on the top
  so that even when resizing the page it stays in the corner*/
  position: fixed;
  z-index: 2;
  width: 100%; }

/** Main section of the page**/
main {
  /** For ID #home in the <main> element to be referenced & has to be used**/
  padding: 4em;
  overflow: hidden;
  /** This is just a div class so no & used here **/ }
  main#home {
    height: 100vh; }
    main#home h1 {
      margin-top: 20vh; }
  main .icons {
    margin-top: 1rem;
    /** icon links **/ }
    main .icons a {
      padding: 0.5rem;
      /** SCSS syntax **/ }
      main .icons a:hover {
        color: #ffcc66;
        transition: all 0.5s ease-out;
        /** SASS syntax **/
        /** One way of using this, better way to use mixins **/
        /** transition: all 0.5s ease-out; **/ }
