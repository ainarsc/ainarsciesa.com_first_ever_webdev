/** It looks at #bg-img class in the
body because I included backgound mixin in the body styling
The following could be set up in the body or other way, but this is
showing SASS convention**/
/** These mixins will be imported in different file where
the resizible content will be styled. The styles don't go here
as this just specifies the screen sizes **/
.menu-btn {
  position: absolute;
  z-index: 3;
  right: 35px;
  top: 35px;
  cursor: pointer;
  transition: all 0.5s ease-out; }
  .menu-btn .btn-line {
    width: 28px;
    height: 3px;
    margin: 0 0 5px 0;
    background: white;
    transition: all 0.5s ease-out; }
  .menu-btn.close {
    transform: rotate(180deg); }
    .menu-btn.close .btn-line:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px); }
    .menu-btn.close .btn-line:nth-child(2) {
      opacity: 0; }
    .menu-btn.close .btn-line:nth-child(3) {
      transform: rotate(-45deg) translate(7px, -6px); }

.menu {
  position: fixed;
  top: 0;
  width: 100%;
  opacity: 0.9;
  visibility: hidden; }
  .menu.show {
    visibility: visible; }
  .menu-nav, .menu-branding {
    display: flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    float: left;
    width: 50%;
    height: 100vh;
    overflow: hidden; }
  .menu-nav {
    margin: 0;
    padding: 0;
    background: #373737;
    list-style: none;
    transform: translate3d(0, -100%, 0);
    transition: all 0.5s ease-out; }
    .menu-nav.show {
      transform: translate3d(0, 0, 0); }
  .menu-branding {
    background: #444;
    transform: translate3d(0, 100%, 0);
    transition: all 0.5s ease-out; }
    .menu-branding.show {
      transform: translate3d(0, 0, 0); }
  .menu .nav-items {
    transform: translate3d(600px, 0, 0);
    transition: all 0.5s ease-out; }
    .menu .nav-items.show {
      transform: translate3d(0, 0, 0); }
  .menu .nav-link {
    display: inline-block;
    position: relative;
    font-size: 20px;
    font-weight: 300;
    text-transform: uppercase;
    padding: 0.8rem;
    color: white;
    text-decoration: none;
    transition: all 0.5s ease-out; }
    .menu .nav-link.current {
      color: #ffcc66; }
    .menu .nav-link:hover {
      color: #ffcc66; }

/**or loop same as in java (i = 0; x<y; i++),
Each x is being multiplied to make each line
come in seperatly **/
.nav-items:nth-child(1) {
  transition-delay: 0.1s; }

.nav-items:nth-child(2) {
  transition-delay: 0.2s; }

.nav-items:nth-child(3) {
  transition-delay: 0.3s; }

.nav-items:nth-child(4) {
  transition-delay: 0.4s; }

@media screen and (max-width: 768px) {
  main {
    align-items: center;
    text-align: center; }
    main .lg-heading {
      line-height: 1; } }

@media screen and (max-width: 500px) {
  main#home h1 {
    margin-top: 10vh; }
  .menu .nav-link {
    font-size: 15px; }
  .menu-nav,
  .menu-branding {
    float: none;
    min-height: 0;
    width: 100%; }
  .menu-branding {
    height: 35vh;
    transform: translate3d(-100%, 0, 0); }
  .menu-nav {
    height: 65vh;
    transform: translate3d(100%, 0, 0); } }

.japan {
  background: url(/../dist/img_files/japan.jpg); }

.india {
  background: url(/../dist/img_files/india.jpg); }

.australia {
  background: url(/../dist/img_files/australia.jpg); }

.newzealand {
  background: url(/../dist/img_files/newzealand.jpg); }

.southkorea {
  background: url(/../dist/img_files/southkorea.jpg); }

.nepal {
  background: url(/../dist/img_files/nepal.jpg); }

.vietnam {
  background: url(/../dist/img_files/vietnam.jpg); }

.iceland {
  background: url(/../dist/img_files/iceland.jpg); }

* {
  box-sizing: border-box; }

/** Look into refactoring the code, a lot of the & are not necessary
and ID and classes in some cases here are not necessary, remove them from
HTML markup and just style the HTML element instead **/
body {
  /** checks the variable thats set to true/false at the global scope **/
  background: white;
  color: white;
  height: 100%;
  margin: 0;
  line-height: 1.2;
  font-family: 'Helvetica', Tahoma, Geneva, sans-serif; }
  body#bg-img {
    background: url(/../dist/img_files/DSC01071.jpg);
    background-attachment: fixed;
    background-size: cover; }
    body#bg-img:after {
      /** after effect, has to include content **/
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      background: rgba(68, 68, 68, 0.5); }

/* Headings */
h1, h2, h3 {
  margin: 0;
  font-weight: 100;
  /** the & references the class or ID **/ }
  h1.lg-heading, h2.lg-heading, h3.lg-heading {
    font-size: 5rem;
    /** SCSS syntax **/ }
  h1.sm-heading, h2.sm-heading, h3.sm-heading {
    margin-bottom: 1rem;
    padding: 0.2rem; }
    h1.sm-heading .highlightH2, h2.sm-heading .highlightH2, h3.sm-heading .highlightH2 {
      padding: 0.2rem;
      background: rgba(73, 73, 73, 0.5); }
  h1.page-heading, h2.page-heading, h3.page-heading {
    padding: 0;
    margin-left: 8rem;
    margin-right: 8rem;
    margin-bottom: 0.5rem; }

.text-secondary {
  color: #ffcc66; }

/* Links (inlcuding icons as they are wrapped in a element)*/
a {
  color: white;
  text-decoration: none; }

.blog-title {
  padding-left: 0; }

.blog-text {
  font-size: 1rem;
  font-weight: 100;
  margin-left: auto;
  text-align: justify; }

header {
  /* fixes the little menu button on the top
  so that even when resizing the page it stays in the corner*/
  position: fixed;
  z-index: 2;
  width: 100%; }

/** Main section of the page**/
main {
  /** This is just a div class so no & used here **/ }
  main#home {
    /** For ID #home in the <main> element to be referenced & has to be used**/
    padding: 4em;
    overflow: hidden;
    height: 100vh; }
    main#home h1 {
      margin-top: 20vh; }
  main .icons {
    margin-top: 1rem;
    /** icon links **/ }
    main .icons a {
      padding: 0.5rem;
      /** SCSS syntax **/ }
      main .icons a:hover {
        color: #ffcc66;
        transition: all 0.5s ease-out;
        /** SASS syntax **/
        /** One way of using this, better way to use mixins **/
        /** transition: all 0.5s ease-out; **/ }
  main .fixed-left-side {
    position: fixed;
    top: 31vh;
    left: 0; }
    main .fixed-left-side a {
      display: block;
      color: #444; }

#theme {
  color: #29293d; }
  #theme header {
    background-color: #444; }
    #theme header h2 {
      font-size: 2rem;
      font-weight: normal;
      padding: 1.5rem;
      color: white; }
  #theme #page-content {
    padding-top: 7rem; }

.about-content {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1rem;
  grid-row-gap: 3rem;
  padding-right: 5rem;
  padding-left: 5rem;
  grid-template-areas: 'pic1 text1' 'text2 pic2'; }
  .about-content .about-text-1 {
    grid-area: text1;
    text-align: justify;
    font-weight: 100; }
    .about-content .about-text-1 h3 {
      padding-bottom: 8px;
      font-weight: 400; }
  .about-content .about-picture-1 {
    grid-area: pic1; }
    .about-content .about-picture-1 img {
      width: 100%;
      margin: auto;
      border-color: #ffcc66;
      border-width: thin;
      border-style: solid; }
  .about-content .about-text-2 {
    grid-area: text2;
    text-align: justify;
    font-weight: 100; }
  .about-content .about-picture-2 {
    grid-area: pic2; }
    .about-content .about-picture-2 img {
      width: 100%;
      margin: auto;
      border-color: #ffcc66;
      border-width: thin;
      border-style: solid; }

.footie {
  text-align: center;
  background-color: #6a6a6a;
  color: #ffcc66;
  padding: 0.5rem; }

.blog-gridlayout {
  display: grid;
  grid-template-columns: 3fr 1fr;
  grid-gap: 2rem;
  margin-left: 8rem;
  margin-right: 8rem;
  margin-bottom: 1rem;
  grid-template-areas: 'post sidebar'; }
  .blog-gridlayout button {
    background-color: #eaeaea;
    color: #444;
    padding: 0;
    margin: 0;
    width: 100%;
    min-height: 2rem;
    font-size: 1rem;
    border: none; }

.blog-entries {
  grid-area: post; }
  .blog-entries .blog-entry {
    background-color: white;
    margin-bottom: 1rem;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); }
    .blog-entries .blog-entry .img-box {
      min-height: 50vh;
      max-height: 50vh;
      padding: 0;
      background-color: #444;
      width: 100%;
      background-position: center;
      background-size: cover;
      background-repeat: no-repeat;
      opacity: 0.8; }
    .blog-entries .blog-entry article {
      padding: 0.5rem; }
      .blog-entries .blog-entry article .blog-description {
        margin-top: 0.2rem; }

.sidebar {
  grid-area: sidebar;
  max-height: 50vh;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); }

#post8, #post7,
#post6, #post5, #post4, #post3, #post2, #post1 {
  display: none; }
