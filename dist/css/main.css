/** It looks at #bg-img class in the
body because I included backgound mixin in the body styling
The following could be set up in the body or other way, but this is
showing SASS convention**/
* {
  box-sizing: border-box; }

body {
  /** checks the variable thats set to true/false at the global scope **/
  background: #444;
  color: white;
  height: 100%;
  margin: 0;
  line-height: 1.5;
  font-family: 'Helvetica', Tahoma, Geneva, sans-serif; }
  body#bg-img {
    background: url(/../dist/img_files/DSC01071.jpg);
    background-attachment: fixed;
    background-size: cover;
    /** Better syntax **/ }
    body#bg-img:after {
      /** after effect, has to include content **/
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      background: rgba(68, 68, 68, 0.5); }

/* Headings */
h1, h2, h3 {
  margin: 0;
  font-weight: 100;
  /** SCSS syntax the same as  outside class:foo**/ }
  h1.lg-heading, h2.lg-heading, h3.lg-heading {
    font-size: 5rem;
    /** SCSS syntax **/ }
  h1.sm-heading, h2.sm-heading, h3.sm-heading {
    margin-bottom: 1rem;
    padding: 0.2rem 1rem;
    background: rgba(73, 73, 73, 0.5); }

.text-secondary {
  color: #ffcc66; }

/* Links (inlcuding icons as they are wrapped in a element)*/
a {
  color: white;
  text-decoration: none; }

header {
  /* fixes the little menu button on the top
  so that even when resizing the page it stays in the corner*/
  position: fixed; }

/** Main section of the page**/
main {
  /** The following could be done differenetly.
  Not necessary to be put in a home if its an id which is unique
  Would make more sense to use class for "home"and define styles
  in global scope, so the styles would apply anyway if html tag is
  wrapped with this class.
  Remeber to refactor the code after,
  but for now leaving it here to show this SASS syntax **/ }
  main#home {
    padding: 4em;
    border: 1px solid;
    overflow: hidden;
    height: 100vh; }
    main#home h1 {
      margin-top: 20vh; }
  main .icons {
    margin-top: 1rem;
    /** icon links **/ }
    main .icons a {
      padding: 0.5rem;
      /** SCSS syntax **/ }
      main .icons a:hover {
        color: #ffcc66;
        transition: all 0.5s ease-out;
        /** SASS syntax **/
        /** One way of using this, better way to use mixins **/
        /** transition: all 0.5s ease-out; **/ }
