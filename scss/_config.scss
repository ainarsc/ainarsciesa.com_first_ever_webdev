$primary-color: #444;
$secondary-color: #ffcc66;
$third-color: #763626;
$forth-color: grey;
$text-color-light: white;
$text-color-black: black;
$heading-color-light: white;
$heading-color-dark: black;
$body-background-tone: 70%;
$show-home-image: true;
$home-image: url(/../dist/img_files/DSC01071.jpg);
$side-margin: 12rem;
$background-opacity: 0.5;
$hidetext: none;
$box-background-color: lighten($primary-color, 95%);
$box-corner-radius: 5px;
$site-font: 'Helvetica', Tahoma, Geneva, sans-serif;

@mixin easeOut {
  transition: all 0.5s ease-out;
}
@mixin round-corners{
  border-top-left-radius: $box-corner-radius;
  border-top-right-radius: $box-corner-radius;
  border-bottom-right-radius: $box-corner-radius;
  border-bottom-left-radius: $box-corner-radius;
}
@mixin sidemargins{
  margin-left: $side-margin;
  margin-right: $side-margin;
}
/** It looks at #bg-img class in the
body because I included backgound mixin in the body styling
The following could be set up in the body or other way, but this is
showing SASS convention**/
@mixin background{
  /** checks the variable thats set to true/false at the global scope **/
  @if $show-home-image{
    &#bg-img{
      background: $home-image;
      background-attachment: fixed;
      background-size: cover;
      &:after { /** after effect, has to include content **/
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        background: rgba($primary-color, $background-opacity);
      }
    }
  }
}
@mixin shadow{
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

@mixin fade{
  opacity: 0.8;
  &:hover{
    opacity: 1;
  }
}
@mixin grow{
  &:hover {
    -webkit-transform: scale(1.05);
    -ms-transform: scale(1.05);
    transform: scale(1.05);
  }
}
// mixins for CSS media queries

/** These mixins will be imported in different file where
the resizible content will be styled. The styles don't go here
as this just specifies the screen sizes **/

// Media query that takes affect on screens 500>=
@mixin smScreen{
  @media screen and (max-width: 500px){
    @content;
  }
}
// Takes effect when screen is 768px <=
@mixin mdScreen{
  @media screen and (max-width: 768px){
    @content;
  }
}
//Takes effect when screen is between 789 and 1170px
@mixin lgScreen{
  @media screen and (max-width: 769px) and (max-width: 1170px){
    @content;
  }
}
@mixin xlScreen{
  @media screen and (min-width: 1171){
    @content;
  }
}
